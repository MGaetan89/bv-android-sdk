buildscript {
    dependencies {
        classpath demoAppBuildDep.androidPlugin
        classpath demoAppBuildDep.crashlyticsPlugin
//        classpath demoAppBuildDep.androidAptPlugin
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'com.android.application'
//apply plugin: 'android-apt'

def hasCrashlyticsKey() {
    return file('fabric.properties').exists()
}

if (hasCrashlyticsKey()) {
    apply plugin: 'io.fabric'
}

def hasAppdemoBuildSettings() {
    return hasProperty('BVSDK_DEMOAPP_STORE_FILE') && file(BVSDK_DEMOAPP_STORE_FILE).exists() && hasProperty('BVSDK_DEMOAPP_STORE_PASSWORD') && hasProperty('BVSDK_DEMOAPP_KEY_ALIAS') && hasProperty('BVSDK_DEMOAPP_KEY_PASSWORD');
}

android {
    compileSdkVersion demoAppBuildInfo.compileSdkVersion
    buildToolsVersion demoAppBuildInfo.buildToolsVersion

    compileOptions {
        sourceCompatibility demoAppBuildInfo.sourceCompatibilityVersion
        targetCompatibility demoAppBuildInfo.targetCompatibilityVersion
    }

    dexOptions {
        // Skip pre-dexing when running on CI server or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }

    signingConfigs {
        release {
            if (hasAppdemoBuildSettings()) {
                storeFile file(BVSDK_DEMOAPP_STORE_FILE)
                storePassword BVSDK_DEMOAPP_STORE_PASSWORD
                keyAlias BVSDK_DEMOAPP_KEY_ALIAS
                keyPassword BVSDK_DEMOAPP_KEY_PASSWORD
            }
        }
    }

    defaultConfig {
        minSdkVersion demoAppBuildInfo.minSdkVersion
        targetSdkVersion demoAppBuildInfo.targetSdkVersion
        versionCode demoAppVersionCode
        versionName demoAppVersionName
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.debug'
            debuggable true
        }
    }

    buildTypes.each {
        it.buildConfigField 'boolean', 'HAS_CRASHLYTICS_KEY', String.valueOf(hasCrashlyticsKey())
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
  if (useLocalSdk) {
    compile project(':bvanalytics')
    compile project(':bvadvertising')
    compile project(':bvrecommendations')
    compile project(':bvconversations')
    compile project(':bvcurations')
    compile project(':bvlocation')
    compile project(':bvpin')
    compile project(':bvpinnotifications')
    compile project(':bvstorenotifications')
    compile project(':bvcurationsui')
  } else {
    compile demoAppDep.bvSdkAnalytics
    compile demoAppDep.bvSdkAds
    compile demoAppDep.bvSdkRecommendations
    compile demoAppDep.bvSdkConversations
    compile demoAppDep.bvSdkCurations
    compile demoAppDep.bvSdkPin
    compile demoAppDep.bvSdkPinNotif
    compile demoAppDep.bvSdkStoreNotif
    compile demoAppDep.bvSdkCurationsUi
  }
  compile demoAppDep.picasso
  compile demoAppDep.picassoDownloader
  compile demoAppDep.prettyTime
  compile demoAppDep.appCompatV7
  compile demoAppDep.designCompat
  compile demoAppDep.supportV4
  compile demoAppDep.cardview
  compile demoAppDep.preferenceV7
  compile demoAppDep.preferenceV14
  compile demoAppDep.constraintLayout
  compile demoAppDep.playServiceAds
  compile demoAppDep.playServiceMaps
  compile demoAppDep.playServiceLocation
//  compile demoAppDep.playAppIndexing
  compile demoAppDep.ddPlist
  compile demoAppDep.circleIndicator
  compile demoAppDep.dagger
  annotationProcessor demoAppDep.daggerProcessor
  compile demoAppDep.stetho
  compile demoAppDep.stethoOkhttp3
  compile demoAppDep.butterknife
  compile demoAppDep.processPhoenix
  annotationProcessor demoAppDep.butterknifeCompiler
  // iovation aar dependency
  // Uncomment the following lines to add iovation support
  // Make sure the iovation arr is in the app/libs folder
  //    dependencies {
  //        compile fileTree(dir: 'libs', include: ['*.jar'])
  //        compile(name:'deviceprint-release-2.3.0', ext:'aar')
  //        compile(group:'com.android.support', name:'support-v4', version:'23.0.1')
  //    }
  releaseCompile demoAppDep.leakCanaryNoOp
  debugCompile demoAppDep.leakCanary
  testCompile demoAppTestDep.junit
  compile(demoAppDep.crashlytics) {
    transitive = true;
  }
}




