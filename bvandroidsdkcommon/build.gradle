buildscript {
    dependencies {
        classpath dep.androidPlugin
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    dexOptions {
        // Skip pre-dexing when running on CI server or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'boolean', 'ANALYTICS_ENABLED',  String.valueOf(rootProject.ext.analyticsEnabled)
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile dep.gson
    compile dep.okhttp3
    compile dep.recyclerview

    // Dependencies for local unit tests
    testCompile dep.junit
    testCompile dep.mockito
    testCompile dep.hamcrest
    testCompile dep.mockWebServer
    testCompile dep.robolectric
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')

afterEvaluate { project ->
    android.libraryVariants.all { variant ->
        tasks.androidJavadocs.doFirst {
            classpath += files(variant.javaCompile.classpath.files)
        }
    }
}